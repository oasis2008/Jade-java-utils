<?xml version="1.0" encoding="UTF-8"?>
<project name="example-cdn" default="usage" basedir=".">
	<description>struts project</description>
	<property file="build.properties" />
	<property name="tomcat.home" value="${appserver.home}" />
	<property name="deployname" value="example-cdn" />

	<property name="src.code" location="src/main/java" />
	<property name="src.test" location="src/test/java" />
	<property name="src.code.res" location="src/main/resources" />
	<property name="src.test.res" location="src/test/resources" />
	<property name="src.webcontent" location="src/main/webapp" />
	

	<property name="build.dir" location="tmp" />
	<property name="build.lib.compile"    location="${build.dir}/libcmp" />
	<property name="build.lib.run"        location="${build.dir}/librun" />
	<property name="build.classes.code"   location="${build.dir}/code" />
	<property name="build.classes.test"   location="${build.dir}/test" />
	<property name="build.style.compose"  location="${build.dir}/style" />
	<property name="build.script.compose" location="${build.dir}/scripts" />

	<property name="junit.report.dir" value="junitreport" />
	<property name="junit.report.src" value="junitreport/src" />
	<property name="junit.report.frame" value="junitreport/frame" />

	<property name="dist.dir" location="dist" />
	<property name="dist.jar" location="dist/jar" />
	<property name="dist.war" location="dist/war" />

	<!--  to build the build path -->
	<path id="lib.compile">
		<fileset dir="${build.lib.compile}">
			<include name="*.jar" />
		</fileset>
	</path>
	<path id="lib.run">
		<fileset dir="${build.lib.run}">
			<include name="*.jar" />
		</fileset>
	</path>


	<!--   -->
	<path id="classpath.code">
		<pathelement path="${build.classes.code}" />
		<pathelement path="${build.classes.test}" />
	</path>

	<target name="usage">
		<echo message=" ====== tast to build ===== " />
		<echo message="clean          -> clean  tmp folder" />
		<echo message="compile        -> compile programe" />
		<echo message="compileTest    -> compile TestCase" />
		<echo message="reportJunit    -> run and generate report" />
		<echo message="genJAR         -> generate jars" />
		<echo message="genWAR         -> generate war" />
		<echo message=" ====== tast to deploy ===== " />
		<echo message="listApp        -> list app on server" />
		<echo message="startApp       -> start this application" />
		<echo message="stopApp        -> stop this application" />
		<echo message="reloadApp      -> reload this application" />
		<echo message="deployApp      -> deploy this app to server" />
		<echo message="deployNewApp   -> regen and deploy" />
		<echo message="undeployApp    -> undeploy" />
		<echo message="redeployApp    -> redeploy" />
		<echo message="redeployNewApp -> regen and redeploy" />
	</target>

	
	<filelist id="cat.js.order">
		<file name="${src.webcontent}/scripts/common/comm.js" />
		<file name="${src.webcontent}/scripts/common/DataStructure.js" />
		<file name="${src.webcontent}/scripts/common/upload.js" />
	</filelist>
	
	<!-- 拼接js与css文件 -->
	<target name="concatJsCss">
		<!-- 基本样式 -->
		<concat destfile="${src.webcontent}/style/base.css">
			<filelist dir="${src.webcontent}/style-parts-order">
				<file name="base-layout.css" />
				<file name="base-context.css" />
			</filelist>
			<fileset dir="${src.webcontent}/style-parts">
				<include name="base-*"/>
			</fileset>
		</concat>
		<!-- 基本JS -->
		<concat destfile="${src.webcontent}/scripts/base.js">
			<filelist dir="${src.webcontent}/scripts-parts-order">
				<file name="base-string.js" />
				<file name="base-url.js" />
				<file name="base-DataStructure.js" />
			</filelist>
			<fileset dir="${src.webcontent}/scripts-parts">
				<include name="base-*"/>
			</fileset>
		</concat>
	</target>

	<!--删除svn -->
	<target name="cleanSVN" description="deletesSVN">
		<delete includeemptydirs="true">
			<fileset dir="." includes="**/.svn/" defaultexcludes="false" />
		</delete>
	</target>

	<!--// create needed folder-->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${junit.report.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<!--// create needed folder-->
	<target name="init">
		<delete dir="${build.dir}" />
		<delete dir="${junit.report.dir}" />
		<delete dir="${dist.dir}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.lib.compile}" />
		<mkdir dir="${build.lib.run}" />
		<copy todir="${build.lib.compile}">
			<fileset dir="${lib.tomcat}">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy todir="${build.lib.run}">
			<fileset dir="${lib.junit}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${lib.url}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${lib.ssh}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${lib.mysql}">
				<include name="*.jar" />
			</fileset>
		</copy>
		<delete dir="${build.style.compose}" />
		<mkdir  dir="${build.style.compose}" />
		<delete dir="${build.script.compose}" />
		<mkdir  dir="${build.script.compose}" />
	</target>

	<!--// to compile the .java file -->
	<target name="compile" depends="init">
		<mkdir dir="${build.classes.code}" />
		<javac srcdir="${src.code}" destdir="${build.classes.code}" 
			includeantruntime="true" debug="on">
			<classpath refid="lib.compile" />
			<classpath refid="lib.run" />
		</javac>
		<copy todir="${build.classes.code}">
			<fileset dir="${src.code}">
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="${src.code.res}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<!--// to compile the .java file -->
	<target name="compileTest" depends="compile">
		<mkdir dir="${build.classes.test}" />
		<javac srcdir="${src.test}" destdir="${build.classes.test}" 
			includeantruntime="true" debug="on">
			<classpath refid="lib.compile" />
			<classpath refid="lib.run" />
			<classpath refid="classpath.code" />
		</javac>
		<copy todir="${build.classes.test}">
			<fileset dir="${src.test}">
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="${src.test.res}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<!-- Run JUnit test and generate Junit Report-->
	<target name="runJunit" depends="compileTest">
		<mkdir dir="${junit.report.src}" />
		<junit fork="yes" printsummary="withOutAndErr" 
			haltonerror="yes" haltonfailure="yes">
			<formatter type="xml" />
			<classpath refid="lib.compile" />
			<classpath refid="lib.run" />
			<classpath refid="classpath.code" />
			<test todir="${junit.report.src}" 
				name="test.base.sute.SampleSuite" />
		</junit>
	</target>

	<!-- trans JUnit report to HTML fromat -->
	<target name="reportJunit" depends="runJunit">
		<mkdir dir="${junit.report.frame}" />
		<junitreport todir="${junit.report.frame}">
			<fileset dir="${junit.report.src}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.report.frame}" />
		</junitreport>
	</target>

	<!-- // to create jar file-->
	<target name="genJAR" depends="compile">
		<mkdir dir="${dist.jar}" />
		<jar destfile="${dist.jar}/jade-dungeon.jar" 
			basedir="${build.classes.code}" includes="*.*" />
		<jar destfile="${dist.jar}/jade-dungeon-tools.jar" 
			basedir="${build.classes.code}" includes="jade/dungeon/tools/**/*.*" />
		<jar destfile="${dist.jar}/jade-dungeon-base.jar" 
			basedir="${build.classes.code}" includes="jade/dungeon/base/**/*.*" />
	</target>
	
	<taskdef name="yui-compressor"
		classname="net.noha.tools.ant.yuicompressor.tasks.YuiCompressorTask">
		<classpath>
			<fileset dir="${lib.yui}">
				<include name="*.jar" />
			</fileset>
		</classpath>
	</taskdef>

	<target name="compress" depends="concatJsCss">
		<copy todir="${build.style.compose}" >
			<fileset dir="${src.webcontent}/style">
				<exclude name="**/*.js"/>
				<exclude name="**/*.css"/>
			</fileset>
		</copy>
		<copy todir="${build.script.compose}" >
			<fileset dir="${src.webcontent}/scripts">
				<exclude name="**/*.js"/>
				<exclude name="**/*.css"/>
			</fileset>
		</copy>
		<yui-compressor warn="false" charset="UTF-8" 
			fromdir="${src.webcontent}/style" todir="${build.style.compose}" 
			csssuffix=".css" jssuffix=".js">
		</yui-compressor>
		<yui-compressor warn="false" charset="UTF-8" 
			fromdir="${src.webcontent}/scripts" todir="${build.script.compose}" 
			csssuffix=".css" jssuffix=".js">
			<exclude name="libs/**"/>
		</yui-compressor>
	</target>

	<target name="genWAR" depends="genJAR,compress" >
		<mkdir dir="${dist.war}" />
		<war destfile="${dist.war}/${deployname}.war" 
			webxml="${src.webcontent}/WEB-INF/web.xml">
			<lib dir="${build.lib.run}">
				<include name="*.jar" />
			</lib>
			<classes dir="${build.classes.code}" />
			<zipfileset dir="${src.webcontent}" prefix="" >
				<!-- -->
				<exclude name="style/**" />
				<exclude name="scripts/**" />
				<exclude name="style-parts/**" />
				<exclude name="style-parts-order/**" />
				<exclude name="scripts-parts/**" />
				<exclude name="scripts-parts-order/**" />
				<exclude name="**/web.xml" />
				<exclude name="META-INF/MANIFEST.MF" />
			</zipfileset>
			<!-- -->
			<zipfileset dir="${build.style.compose}" prefix="style" />
			<zipfileset dir="${build.script.compose}" prefix="scripts" />
		</war>
	</target>

	<!-- ============================================================== -->
	<!--                   Define Tomcat tasks                          -->
	<!-- ============================================================== -->
	<path id="catalina-ant-classpath">
		<fileset dir="${appserver.lib}">
			<include name="catalina-ant.jar" />
		</fileset>
	</path>

	<taskdef name="install" classname="org.apache.catalina.ant.InstallTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="list" classname="org.apache.catalina.ant.ListTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="start" classname="org.apache.catalina.ant.StartTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>

	<!-- ============================================================== -->
	<!--                   List Tomcat applications                     -->
	<!-- ============================================================== -->
	<target name="listApp" description="List Tomcat applications">
		<list url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" />
	</target>


	<!-- ============================================================== -->
	<!--                   stat the application                         -->
	<!-- ============================================================== -->
	<target name="startApp" description="Start Tomcat application">
		<start url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${deployname}" />
	</target>

	<!-- ============================================================== -->
	<!--                   stop the  application                        -->
	<!-- ============================================================== -->
	<target name="stopApp" description="Stop Tomcat application">
		<stop url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${deployname}" />
	</target>

	<!-- ============================================================== -->
	<!--                  reload the application                        -->
	<!-- ============================================================== -->
	<target name="reloadApp" description="Reload application in Tomcat">
		<reload url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${deployname}" />
	</target>

	<!-- ============================================================== -->
	<!--                   Install WAR file                             -->
	<!-- ============================================================== -->
	<target name="deployApp" description="Install application in Tomcat">
		<install url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${deployname}" war="${dist.war}/${deployname}.war" />
	</target>
	<target name="deployNewApp" depends="genWAR,deployApp" />

	<!-- ============================================================== -->
	<!--                   Remove WAR from Server                       -->
	<!-- ============================================================== -->
	<target name="undeployApp" description="Undeploy Tomcat application">
		<undeploy url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${deployname}" />
	</target>
	<target name="redeployApp" depends="undeployApp,deployApp" />
	<target name="redeployNewApp" depends="genWAR,undeployApp,deployApp" />

</project>
